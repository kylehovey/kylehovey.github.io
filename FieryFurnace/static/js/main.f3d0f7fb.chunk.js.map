{"version":3,"sources":["images sync /^/.//IMG_.*/.jpg$","images/IMG_2210.jpg","images/IMG_2211.jpg","images/IMG_2214.jpg","images/IMG_2219.jpg","images/IMG_2222.jpg","images/IMG_2228.jpg","images/IMG_2232.jpg","images/IMG_2236.jpg","images/IMG_2240.jpg","images/IMG_2243.jpg","images/IMG_2246.jpg","images/IMG_2250.jpg","images/IMG_2252.jpg","images/IMG_2254.jpg","images/IMG_2255.jpg","images/IMG_2261.jpg","images/IMG_2266.jpg","images/IMG_2268.jpg","images/IMG_2272.jpg","images/IMG_2274.jpg","images/IMG_2276.jpg","images/IMG_2280.jpg","images/IMG_2281.jpg","images/IMG_2286.jpg","images/IMG_2287.jpg","images/IMG_2292.jpg","images/IMG_2293.jpg","images/IMG_2301.jpg","images/IMG_2302.jpg","images/IMG_2310.jpg","images/IMG_2314.jpg","images/IMG_2316.jpg","images/IMG_2317.jpg","images/IMG_2319.jpg","images/IMG_2321.jpg","images/IMG_2322.jpg","images/IMG_2323.jpg","images/IMG_2326.jpg","images/IMG_2327.jpg","images/IMG_2330.jpg","images/IMG_2331.jpg","images/IMG_2332.jpg","images/IMG_2333.jpg","images/IMG_2335.jpg","images/IMG_2338.jpg","images/IMG_2342.jpg","images/IMG_2343.jpg","images/IMG_2344.jpg","images/IMG_2348.jpg","images/IMG_2349.jpg","images/IMG_2352.jpg","images/IMG_2355.jpg","images/IMG_2358.jpg","images/IMG_2361.jpg","images/IMG_2362.jpg","images/IMG_2365.jpg","images/IMG_2366.jpg","images/IMG_2372.jpg","images/IMG_2373.jpg","builders/image_points.ts","components/map.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","data","trackWithTime","time","longitude","latitude","parseInt","parseFloat","type","features","ImageTimes","name","sort","A","B","Math","abs","geometry","coordinates","properties","RawData","Data","TrackData","state","viewport","width","height","zoom","hoveredFeature","hoveredLocation","tooltipShown","overlayShown","resizeMap","setState","window","innerWidth","setViewport","onHover","srcEvent","offsetX","offsetY","undefined","find","source","x","y","getCursor","onClick","openOverlay","closeOverlay","addEventListener","this","mapStyle","onViewportChange","mapboxApiAccessToken","lineMetrics","layout","paint","ImagePoints","tooltip","overlay","className","style","top","left","src","require","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sHAAA,IAAIA,EAAM,CACT,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,GAClB,iBAAkB,IAInB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,i/58DChFpBU,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IA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","file":"static/js/main.f3d0f7fb.chunk.js","sourcesContent":["var map = {\n\t\"./IMG_2210.jpg\": 37,\n\t\"./IMG_2211.jpg\": 38,\n\t\"./IMG_2214.jpg\": 39,\n\t\"./IMG_2219.jpg\": 40,\n\t\"./IMG_2222.jpg\": 41,\n\t\"./IMG_2228.jpg\": 42,\n\t\"./IMG_2232.jpg\": 43,\n\t\"./IMG_2236.jpg\": 44,\n\t\"./IMG_2240.jpg\": 45,\n\t\"./IMG_2243.jpg\": 46,\n\t\"./IMG_2246.jpg\": 47,\n\t\"./IMG_2250.jpg\": 48,\n\t\"./IMG_2252.jpg\": 49,\n\t\"./IMG_2254.jpg\": 50,\n\t\"./IMG_2255.jpg\": 51,\n\t\"./IMG_2261.jpg\": 52,\n\t\"./IMG_2266.jpg\": 53,\n\t\"./IMG_2268.jpg\": 54,\n\t\"./IMG_2272.jpg\": 55,\n\t\"./IMG_2274.jpg\": 56,\n\t\"./IMG_2276.jpg\": 57,\n\t\"./IMG_2280.jpg\": 58,\n\t\"./IMG_2281.jpg\": 59,\n\t\"./IMG_2286.jpg\": 60,\n\t\"./IMG_2287.jpg\": 61,\n\t\"./IMG_2292.jpg\": 62,\n\t\"./IMG_2293.jpg\": 63,\n\t\"./IMG_2301.jpg\": 64,\n\t\"./IMG_2302.jpg\": 65,\n\t\"./IMG_2310.jpg\": 66,\n\t\"./IMG_2314.jpg\": 67,\n\t\"./IMG_2316.jpg\": 68,\n\t\"./IMG_2317.jpg\": 69,\n\t\"./IMG_2319.jpg\": 70,\n\t\"./IMG_2321.jpg\": 71,\n\t\"./IMG_2322.jpg\": 72,\n\t\"./IMG_2323.jpg\": 73,\n\t\"./IMG_2326.jpg\": 74,\n\t\"./IMG_2327.jpg\": 75,\n\t\"./IMG_2330.jpg\": 76,\n\t\"./IMG_2331.jpg\": 77,\n\t\"./IMG_2332.jpg\": 78,\n\t\"./IMG_2333.jpg\": 79,\n\t\"./IMG_2335.jpg\": 80,\n\t\"./IMG_2338.jpg\": 81,\n\t\"./IMG_2342.jpg\": 82,\n\t\"./IMG_2343.jpg\": 83,\n\t\"./IMG_2344.jpg\": 84,\n\t\"./IMG_2348.jpg\": 85,\n\t\"./IMG_2349.jpg\": 86,\n\t\"./IMG_2352.jpg\": 87,\n\t\"./IMG_2355.jpg\": 88,\n\t\"./IMG_2358.jpg\": 89,\n\t\"./IMG_2361.jpg\": 90,\n\t\"./IMG_2362.jpg\": 91,\n\t\"./IMG_2365.jpg\": 92,\n\t\"./IMG_2366.jpg\": 93,\n\t\"./IMG_2372.jpg\": 94,\n\t\"./IMG_2373.jpg\": 95\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/IMG_2210.a5a952c6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2211.a642459f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2214.95a2c2d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2219.4a7d5c94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2222.e4815950.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2228.75feda7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2232.efbb6db9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2236.59cbbfd9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2240.beaaf215.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2243.c645364f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2246.8230edb0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2250.dbd5449b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2252.ad9f4596.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2254.37cff0df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2255.2481e347.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2261.16ecb029.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2266.9c779ca9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2268.8c13e34a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2272.3244ec18.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2274.5da943ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2276.79324c63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2280.3b62643a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2281.a384d8ca.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2286.f444d5c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2287.dbdafc35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2292.71aa51f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2293.0c0df476.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2301.3fb46826.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2302.d5cf61ee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2310.fd40a817.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2314.b9c3c3a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2316.b5037f21.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2317.075e7d88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2319.e7af7e06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2321.d5e0a748.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2322.9ac59b1b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2323.50bd45b6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2326.a8196cbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2327.4c525cf9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2330.b6fd3751.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2331.e65790d8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2332.10c91c0d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2333.f05027a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2335.fc633ddb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2338.08619fbe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2342.b51b425f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2343.124b55a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2344.a3ff9c1a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2348.c9d2ceb3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2349.fe08eb91.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2352.cb0d3892.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2355.a7ba1e7a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2358.ed57271b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2361.59a6fe05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2362.8dd0e291.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2365.c16043bf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2366.2a5bf5f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2372.5b7116f4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/IMG_2373.7f9da53a.jpg\";","import RawData from '../data/raw.json';\nimport ImageTimes from '../images/times.json';\nimport { Feature, FeatureCollection } from 'geojson';\n\ninterface Data {\n  readonly time: string;\n  readonly alt: string;\n  readonly longitude: string;\n  readonly latitude: string;\n  readonly segment: string;\n}\n\nexport default ((data: Data[]) => {\n\n  const trackWithTime = data.map(({ time, longitude, latitude }) => ({\n    time: parseInt(time) * 1000,\n    longitude: parseFloat(longitude),\n    latitude: parseFloat(latitude),\n  }));\n\n  const inferredLocations = ImageTimes.map(({ name, time }) => ({\n    name,\n    ...(([{ longitude, latitude }]) => ({ longitude, latitude }))(\n      [...trackWithTime].sort(\n        ({ time: A }, { time: B }) => {\n          return Math.abs(time - A) - Math.abs(time - B);\n        }\n      )\n    ),\n  }));\n\n  const ret: FeatureCollection = {\n    type: 'FeatureCollection',\n    features: inferredLocations.map(({ name, longitude, latitude }): Feature => ({\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [longitude, latitude],\n      },\n      properties: {\n        name,\n      },\n    })),\n  };\n\n  return ret;\n})(RawData as Data[]);\n","import React from 'react';\nimport ReactMapGL, { Source, Layer, PointerEvent } from 'react-map-gl';\nimport { Feature, LineString } from 'geojson';\nimport TrackData from '../data/route.json';\nimport ImagePoints from '../builders/image_points';\n\nconst Data: Feature<LineString> = {\n  type: 'Feature',\n  properties: {},\n  geometry: {\n    type: 'LineString',\n    coordinates: TrackData.coordinates,\n  },\n};\n\ninterface Viewport {\n  readonly width: number | string;\n  readonly height: number | string;\n  readonly latitude: number;\n  readonly longitude: number;\n  readonly zoom: number;\n}\n\ninterface Location {\n  readonly x: number;\n  readonly y: number;\n}\n\ninterface State {\n  readonly viewport: Viewport;\n  readonly hoveredFeature: Feature | null;\n  readonly hoveredLocation: Location | null;\n  readonly tooltipShown: boolean;\n  readonly overlayShown: boolean;\n}\n\nexport default class extends React.Component<{}, State> {\n  state: State = {\n    viewport: {\n      width: '100vw',\n      height: '100vh',\n      latitude: 38.74433850188757,\n      longitude: -109.56237695591732,\n      zoom: 15,\n    },\n    hoveredFeature: null,\n    hoveredLocation: null,\n    tooltipShown: false,\n    overlayShown: false,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.resizeMap);\n  }\n\n  resizeMap = (): void => {\n    this.setState(({ viewport }) => ({\n      viewport: {\n        ...viewport,\n        width: window.innerWidth,\n        height: window.innerWidth,\n      },\n    }));\n  }\n\n  setViewport = (viewport: Viewport): void => {\n    this.setState({ tooltipShown: false });\n    this.setState({ viewport });\n  }\n\n  onHover = ({ features, srcEvent }: PointerEvent): void => {\n    const { overlayShown } = this.state;\n    const { offsetX, offsetY } = srcEvent;\n\n    // Ignore hover while overlay is open\n    if (overlayShown) return;\n\n    if (features === undefined) {\n      this.setState({ tooltipShown: false });\n\n      return;\n    };\n\n    const hoveredFeature = features.find(({ source }) => source === 'pictures');\n\n    if (hoveredFeature === undefined) {\n      this.setState({ tooltipShown: false });\n\n      return;\n    };\n\n    this.setState({\n      tooltipShown: true,\n      hoveredFeature,\n      hoveredLocation: {\n        x: offsetX,\n        y: offsetY,\n      },\n    });\n  }\n\n  getCursor = (): string => {\n    const { overlayShown, hoveredFeature, hoveredLocation } = this.state;\n\n    if (overlayShown) {\n      return 'default';\n    }\n\n    if (hoveredFeature === null || hoveredLocation === null) {\n      return 'default';\n    };\n\n    return 'pointer';\n  }\n\n  onClick = (): void => {\n    const { overlayShown, hoveredFeature, hoveredLocation } = this.state;\n\n    // Ignore clicks while overlay is open\n    if (overlayShown) return;\n\n    if (hoveredFeature === null || hoveredLocation === null) {\n      return;\n    };\n\n    this.openOverlay();\n  }\n\n  get tooltip() {\n    const { tooltipShown, hoveredFeature, hoveredLocation } = this.state;\n\n    if (!tooltipShown) return null;\n    if (hoveredFeature === null || hoveredLocation === null) return null;\n\n    const name = hoveredFeature.properties && hoveredFeature.properties.name;\n    const { x, y } = hoveredLocation;\n\n    return (\n      <div className=\"tooltip\" style={{ top: y, left: x }}>\n        <img src={require(`../images/IMG_${name}.jpg`)} />\n      </div>\n    );\n  }\n\n  openOverlay = () => this.setState({\n    overlayShown: true,\n    tooltipShown: false,\n  });\n\n  closeOverlay = () => this.setState({\n    overlayShown: false,\n    hoveredFeature: null,\n    hoveredLocation: null,\n  });\n\n  get overlay() {\n    const { overlayShown, hoveredFeature } = this.state;\n\n    if (hoveredFeature === null) return null;\n\n    const name = hoveredFeature.properties && hoveredFeature.properties.name;\n\n    return (\n      <div className={`overlay${overlayShown ? ' shown' : ''}`}>\n        <button onClick={this.closeOverlay}>X</button>\n        <img src={require(`../images/IMG_${name}.jpg`)} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <ReactMapGL\n        {...this.state.viewport}\n        mapStyle=\"mapbox://styles/mapbox/satellite-v9\"\n        onViewportChange={this.setViewport}\n        onHover={this.onHover}\n        onClick={this.onClick}\n        getCursor={this.getCursor}\n        mapboxApiAccessToken=\"pk.eyJ1IjoidXBlbCIsImEiOiJjajllZ29reTUyYTJoMndsc3ZtdGg2NXpsIn0.Y6sKlsUA9ZIm8rHfklQPaQ\"\n      >\n        <Source id='route' type=\"geojson\" data={Data} lineMetrics>\n          <Layer\n            id=\"route-string\"\n            type=\"line\"\n            layout={{\n              'line-join': 'round',\n              'line-cap': 'round',\n            }}\n            paint={{\n              'line-color': 'skyblue',\n              'line-gradient': [\n                'interpolate',\n                ['linear'],\n                ['line-progress'],\n                0,\n                '#02c4e9',\n                1,\n                '#8b02e9'\n              ],\n              'line-width': 5,\n            }}\n          />\n        </Source>\n        <Source id='pictures' type=\"geojson\" data={ImagePoints}>\n          <Layer\n            id=\"pictures-markers\"\n            type=\"circle\"\n            paint={{\n              'circle-radius': 6,\n              'circle-color': '#ea5700',\n            }}\n          />\n        </Source>\n        {this.tooltip}\n        {this.overlay}\n      </ReactMapGL>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Map from './components/map';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Map />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}